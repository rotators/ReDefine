name: Build

on: push

jobs:

 build:
  runs-on: ${{ matrix.os }}
  strategy:
   matrix:
    os:       [ubuntu-latest, windows-2016]
    platform: [x32, x64]
    compiler: [gnu, clang, cl]
    exclude:

    # linux - cl
    - os: ubuntu-latest
      platform: x32
      compiler: cl
    - os: ubuntu-latest
      platform: x64
      compiler: cl

    # windows - gnu
    - os: windows-2016
      platform: x32
      compiler: gnu
    - os: windows-2016
      platform: x64
      compiler: gnu

    # windows - clang
    - os: windows-2016
      platform: x32
      compiler: clang
    - os: windows-2016
      platform: x64
      compiler: clang

  steps:
  - name:  Environment
    run:   |
           :
           if   [ '${{ matrix.compiler }}' == 'gnu' ]; then
                echo ::set-env name=CC::gcc
                echo ::set-env name=CXX::g++
           elif [ '${{ matrix.compiler }}' == 'clang' ]; then
                echo ::set-env name=CC::clang
                echo ::set-env name=CXX::clang++
           elif [ '${{ matrix.compiler }}' == 'cl' ]; then
                echo ::set-env name=CC::cl
                echo ::set-env name=CXX::cl
           else
                false
           fi
    shell: bash

  - name: Environment (Linux)
    run:  echo ::set-env name=REDEFINE_EXECUTABLE::Build/ReDefine
    if:   runner.os == 'Linux'

  - name: Environment (Windows)
    run:  echo ::set-env name=REDEFINE_EXECUTABLE::Build/Release/ReDefine.exe
    if:   runner.os == 'Windows'

  - name: Software (Linux)
    run:  sudo apt install -y gcc-multilib g++-multilib && hash -r
    if:   runner.os == 'Linux' && matrix.compiler == 'gnu' && matrix.platform == 'x32'

  - uses: actions/checkout@master

  - name: Build
    run:  cmake -P Build.cmake
    env:
     CI:              true
     MATRIX_OS:       ${{ matrix.os }}
     MATRIX_PLATFORM: ${{ matrix.platform }}

  - name:  Build check
    run:   |
           file $REDEFINE_EXECUTABLE
           if [ '${{ runner.os }}' == 'Linux' ]; then ldd $REDEFINE_EXECUTABLE; fi
    shell: bash

  - name: Prepare artifact
    run:   |
           7z a ReDefine.zip $GITHUB_WORKSPACE/$REDEFINE_EXECUTABLE
           7z a ReDefine.zip Source
           7z l ReDefine.zip
    shell: bash
    if:    runner.os == 'Windows' && matrix.platform == 'x32'

# - name: Upload artifact
#   uses: actions/upload-artifact@master
#   with:
#    name: ReDefine
#    path: ReDefine.zip
#   if:    runner.os == 'Windows' && matrix.platform == 'x32'
